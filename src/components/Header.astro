---
import { useTranslations, type Lang } from 'src/i18n';
import { getRelativeLocaleUrl } from 'astro:i18n';
import Letters from './Letters.astro';

const t = useTranslations(Astro.currentLocale as Lang);

const locale = Astro.currentLocale as Lang;

const isActive = (path: string) => getRelativeLocaleUrl(locale, path) === Astro.url.pathname;
---

<header>
	<div id="inner-header">
		<div></div>

		<a href={getRelativeLocaleUrl(locale, '/')} class="brand-container" data-astro-reload>
			<Letters alt="Cunctae" />
		</a>

		<button class="hamburger" aria-label="Menu" aria-expanded="false">
			<span></span>
			<span></span>
			<span></span>
		</button>

		<nav class="nav-menu">
			<ul>
				<li>
					<a
						data-astro-reload
						href={getRelativeLocaleUrl(locale, '/about')}
						class={isActive('/about') ? 'active' : null}
					>
						{
							t({
								es: 'Acerca',
								en: 'About',
								'pt-br': 'Sobre',
							})
						}
					</a>
				</li>
			</ul>
		</nav>
	</div>
</header>

<script>
	const hamburger = document.querySelector('.hamburger');
	const navMenu = document.querySelector('.nav-menu');
	const headerElement = document.getElementsByTagName('header')[0];

	hamburger?.addEventListener('click', () => {
		const isExpanded = hamburger.getAttribute('aria-expanded') === 'true';

		hamburger.setAttribute('aria-expanded', (!isExpanded).toString());
		hamburger.classList.toggle('active');
		navMenu?.classList.toggle('active');

		// Lock scroll to avoid unexpected behaviors
		isExpanded
			? document.body.classList.remove('scroll-lock')
			: document.body.classList.add('scroll-lock');
	});

	let lastScrollTop = 0;
	window.addEventListener(
		'scroll',
		() => {
			const scrollValue = window.scrollY || document.documentElement.scrollTop;
			const scrollY = window.scrollY;

			if (scrollValue > lastScrollTop) {
				headerElement.style.translate = '0 -100%';
			} else if (scrollValue < lastScrollTop) {
				headerElement.style.translate = '0 0';
			}

			lastScrollTop = scrollValue <= 0 ? 0 : scrollValue; // For Mobile or negative scrolling

			// Validate styles for the header
			scrollY >= 800
				? (headerElement.style.backgroundColor = 'var(--Primary-300)')
				: (headerElement.style.backgroundColor = '');
		},
		false,
	);
</script>

<style>
	header {
		width: 100%;
		z-index: 1040;
		position: fixed;
		top: 0;
		transition: 0.2s ease-in-out;
	}

	header:hover {
		background-color: var(--Primary-300);
	}

	#inner-header {
		display: flex;
		align-items: center;
		justify-content: space-between;
		margin: 30px;
	}

	.hamburger {
		display: none;
		flex-direction: column;
		justify-content: space-around;
		width: 2rem;
		height: 2rem;
		background: transparent;
		border: none;
		cursor: pointer;
		padding: 0;
		z-index: 10;
	}

	.hamburger span {
		width: 2rem;
		height: 0.25rem;
		background: currentColor;
		border-radius: 0.5rem;
		transition: all 0.3s ease-in-out;
	}

	.hamburger.active span:nth-child(1) {
		transform: translateY(0.75rem) rotate(45deg);
	}

	.hamburger.active span:nth-child(2) {
		opacity: 0;
	}

	.hamburger.active span:nth-child(3) {
		transform: translateY(-0.75rem) rotate(-45deg);
	}

	.nav-menu {
		display: flex;
		align-items: center;
		gap: 2rem;
	}

	.nav-menu ul {
		display: flex;
		align-items: center;
		gap: 2rem;
		list-style: none;
		margin: 0;
		padding: 0;
	}

	.nav-menu a {
		text-decoration: none;
		font-size: var(--Body-18);
		font-weight: bold;
		transition: color 0.3s ease;
		color: var(--Primary-600);
	}

	.nav-menu  a:hover{
		color: var(--Neutral-600);
	}

	.nav-menu a.active {
		color: var(--Primary-600);
	}

	@media (max-width: 768px) {
		.hamburger {
			display: flex;
		}

		.nav-menu {
			position: fixed;
			inset: 0;
			background: var(--Primary-50);
			flex-direction: column;
			justify-content: center;
			transform: translateX(100%);
			transition: transform 0.3s ease-in-out;
			z-index: 9;
			height: 100vh;
		}

		.nav-menu.active {
			transform: translateX(0);
		}

		.nav-menu ul {
			flex-direction: column;
			align-items: center;
		}
	}
</style>
